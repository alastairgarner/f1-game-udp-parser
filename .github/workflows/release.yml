
name: Package release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-18.04]
        node: [ '13', '12' ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js and NPM
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: npm install
        run: |
          npm install

      - name: Build and Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run build
          npm run package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get node environment variables
        id: get_node_environment
        uses: msansoni/node-environment-action@v1

      - name: Get package version
        id: package_version
        uses: MontyD/package-json-updated-action

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ format('./build/stage/{0}/node-v{1}-{2}-{3}.tar.gz', steps.package_version.outputs.current-package-version, steps.get_node_environment.outputs.node_module_version, steps.get_node_environment.outputs.platform, steps.get_node_environment.outputs.arch) }}
          asset_name: ${{ format('build/stage/{0}/node-v{1}-{2}-{3}.tar.gz', steps.package_version.outputs.current-package-version, steps.get_node_environment.outputs.node_module_version, steps.get_node_environment.outputs.platform, steps.get_node_environment.outputs.arch) }}
          asset_content_type: application/gzip
